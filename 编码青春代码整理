2020.10.26
1.定义两个浮点型变量，并分别赋值为1.234和2.345，计算它们的乘积，输出乘积，结果保留两位小数。
#include<stdio.h>//预编译标准输入输出头文件
int main()//定义主函数，返回值为整型
{
	float f1,f2;//声明浮点型变量f1，f2
	f1=1.234;//给f1赋值1.234
	f2=2.345;//给f2赋值2.345
	printf("%.2f\n",f1*f2);//输出精度为小数点后两位的浮点型，数值为f1*f2，并换行
	return 0;//主函数返回值为0
}

2020.10.27
1.从键盘输入两个整数给变量x和y，然后输出x和y的值，最后交换x和y的值并输出。
#include<stdio.h>
int main()
{
	int x,y,t;
	printf("请输入x的值：");
	scanf("%d",&x);
	printf("请输入y的值：");
	scanf("%d",&y);
	t=x;
	x=y;
	y=t;
	printf("交换后，x=%d,y=%d\n",x,y);
	return 0;
}

2.编写一个程序，把分钟换算成用小时和分钟表示，然后输出。例如：560分钟=9小时20分钟
#include<stdio.h>
int main()
{
	int Minute,hour,min;
	printf("请输入分钟数：");
	scanf("%d",&Minute);//输入总分钟数
	min=Minute%60;//%是取余符号，如：7%2=1，5%3=2
	hour=Minute/60;//小时数可直接通过除法得到，若得到小数会直接取整数部分
	printf("%d分钟=%d小时%d分钟\n",Minute,hour,min);
	return 0;
}

3.从键盘输入一个字符，求出它的前驱和后继字符（按照ASCII码值排序），并按照从小到大的顺序输出这三个字符和对应的ASCII值，字符和ASCII码之间需要换行。
#include<stdio.h>
int main()
{
	char c1;
	printf("请输入字符：");
	c1=getchar();//getchar()是在键盘上读取一个字符输入，只能输入单个字符，不能输入字符串
	printf("%c,%c,%c\n%d,%d,%d\n",c1-1,c1,c1+1,c1-1,c1,c1+1);//C语言中，字符类型变量赋值给整型时，数值为其ASCII码值
	return 0;
}

2020.10.28
1.输入一个不多于3位的正整数，输出它是几位数
#include<stdio.h>
int main()
{
	int num,tens,hundreds;//tens十位数，hundreds百位数
	printf("请输入一个不多于三位的正整数：");
	scanf("%d",&num);
	hundreds=num/100;
	tens=num/10;
	if (hundreds!=0)//!=是不等号
		printf("%d是三位数\n",num);
	else if(tens!=0)
		printf("%d是两位数\n",num);
	else
		printf("%d是一位数\n",num);
	return 0;
}

2.定义小写字母a，b把它换成大写字母（根据ASCII码）并在下一行写出A，B所对应的ASCII值
#include<stdio.h>
int main()
{
	char c1='a',c2='b';//字符变量赋值要用单引号
	c1=c1-32;//大写字母和小写字母ASCII码值差32
	c2=c2-32;
	printf("%c,%c\n%d,%d\n",c1,c2,c1,c2);
	return 0;
}

3.将“suep”翻译成密码，密码规律是:用原来字母后第二个字母代替原来的字母（uwgr）（要用给每一个字母赋初值并使其经过运算的方法来计算)
直接输出：
#include<stdio.h>
int main()
{
	char c1='s',c2='u',c3='e',c4='p';
	c1=c1+2;
	c2=c2+2;
	c3=c3+2;
	c4=c4+2;
	putchar(c1);//putchar(c)，将字符c输出到屏幕上
	putchar(c2);
	putchar(c3);
	putchar(c4);
	printf("\n");
	return 0;
}
数组：
#include<stdio.h>
int main()
{
	char c[3];
	int i;
	printf("请输入四位口令：");
	for (i=0;i<=3;i++)
	{
		c[i]=getchar()+2;
	}
	printf("密码为：");
	for(i=0;i<=3;i++)
	{
		putchar(c[i]);//printf("%c",c[i]),两种语句均可
	}
	printf("\n");
	return 0;
}

2020.10.29
1.该代码中有多个错误，将其改正，使其能正常运行
#include<studio.h>
main()
{
	int a,b,c,max;
	printf("请输入三个整数:");
	scanf("%d,%d,%d",a,b,c);
	if a>b
		max=a;
	else 
		max=b;
	if c>max
		max=c;
	printf("这三个值中的最大值为:%d\n",&max);
	return 0

}
修改后：
#include<stdio.h> //stdio
int main()//int
{
	int a,b,c,max;
	printf("请输入三个整数:");
	scanf("%d,%d,%d",&a,&b,&c);//scanf要有取地址运算&
	if (a>b)//条件要打括号
		max=a;
	else
		max=b;
	if (c>max)//同上
		max=c;
	printf("这三个值中的最大值为:%d\n",max);//printf不用取地址
	return 0;//语句结束要用;
}

2.一球从100米高度自由落下，每次落地后反跳回原高度的一半，再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？
#include<stdio.h>
int main()
{
	int i,n;//i作为循环变量，n为下落次数
	float height,s;//height为反弹高度，s为经过的路程
	s=0;
	height=100.0;
	printf("请输入下落次数：");
	scanf("%d",&n);
	for(i=1;i<=n;i++)//循环次数为下落次数
	{
		if (i==1)
		s=s+height;//第一次下落路程只有下落没有上升，要单独列出
		else
		s=s+height*2.0;
		height=height/2.0;//浮点型和整型做除法，会得到整型，需要把2写成2.0
	}
	printf("第%d次落地时，共经过%f米\n第%d次反弹高度为%f米\n",n,s,n,height);
	return 0;
}

3. 输入年月，输出该月的天数。要求：使用switch语句。闰年算法：四年一闰，百年不闰，四百年再闰
#include<stdio.h>
int main()
{
	int day,month,year;
	printf("请输入年份：");
	scanf("%d",&year);
	printf("请输入月份：");
	scanf("%d",&month);
	switch(month)
	{
	case 1:case 3:case 5:case 7:case 8:case 10:case 12:
		day=31;////switch语句相同情况可以合并
		break;
	case 4:case 6:case 9:case 11:
		day=30;
		break;
	case 2://闰年算法：是4的倍数且不是100的倍数，或是400的倍数
		if ((year%4==0) && (year%100!=0) || (year%400==0))
			day=29;
		else
			day=28;
		break;
	}
	printf("%d年%d月天数为%d天\n",year,month,day);
	return 0;
}

2020.10.30
1. 输入一个正数，如果是整数输出它的值，如果是小数，输出离它最近的整数（四舍五入）小数保留小数点后两位。
输出举例：输入3，输出3=3；输入3.2，输出3.20≈3
#include<stdio.h>
int main()
{
	float f1;
	int i1;
	printf("请输入一个正数：");
	scanf("%f",&f1);
	i1=(int)f1;//i1为f1的整数部分
	if (f1==i1)//判断f1是否为正整数
		printf("%d=%d\n",i1,i1);
	else if (f1<(i1+0.5))//判断f1是否要进1
		printf("%f≈%d\n",f1,i1);
	else if (f1>=(i1+0.5))
		printf("%f≈%d\n",f1,i1+1);
	return 0;
}

2. 从键盘输入一个同学的学号及高数、英语、C语言3门课（用整形表示）的成绩，计算平均分。输出学号及平均分（用两位小数表示）
#include<stdio.h>
int main()
{
	int math,eng,c,id;
	float avg;
	printf("请输入学号：");
	scanf("%d",&id);
	printf("请输入高数、英语、C语言乘积，用“,”隔开：");
	scanf("%d,%d,%d",&math,&eng,&c);
	avg=(math+eng+c)/3.0;
	printf("该同学学号为：%d\n平均分为：%.2f\n",id,avg);
	return 0;
}

3. 编写程序，输入两个整数，1500和350，求出他们的商和余数并进行输出
#include<stdio.h>
int main()
{
	int i1,i2,s,y;//s为商，y为余数
	scanf("%d %d",&i1,&i2);
	s=i1/i2;
	y=i1-s*i2;
	printf("%d÷%d=%d...%d\n",i1,i2,s,y);
	return 0;
}

2020.10.31
1. 输入一个字符，如果是大写字母转换成小写，如果是小写字母转换成大写，如果是数字转换成对应的数值的平方，如果都不是，输出它本身
#include<stdio.h>
int main()
{
	char c1;
	int i1;
	printf("请从键盘上输入一个字符：");
	scanf("%c",&c1);
	if(c1>='a' && c1<='z')//判断是否是小写字母
	{
		c1-=32;//小写字母的ASCII码值比对应的大写字母大32
		printf("%c\n",c1);
	}
	else if(c1>='A' && c1<='Z')
	{
		c1+=32;
		printf("%c\n",c1);
	}
	else if(c1>='0' && c1<='9')
	{   
		i1=c1-'0';//利用字符‘0’的ASCII码值求字符对应的数的值
		printf("%d\n",i1*i1);
	}
	else
		printf("%c\n",c1);
	return 0;
}

2020.11.01
1. 输入一个三位数，将它反向输出。如果不是三位数，则输出0。如输入123，输出321；输入1234，输出0
#include<stdio.h>
int main()
{
	int num,unit,ten,hundred;//unit个位，ten十位，hundred百位
	printf("请输入一个三位数：");
	scanf("%d",&num);
	hundred=num/100;//取百位
	unit=num%10;//取个位
	ten=(num%100-unit)/10;//取十位
	if (num>=100 && num<=999)//判断是否是三位数
		printf("%d→%c%c%c\n",num,unit+'0',ten+'0',hundred+'0');//输出字符，防止原数个位是0
	else
		printf("0\n");
	return 0;
}

2020.11.02
1.输入三个整数x,y,z,请把这三个数由小到大输出
#include <stdio.h>
int main()
{
	int x,y,z,t;
	printf("请输入三个整数：");
	scanf("%d %d %d",&x,&y,&z);
	t=x;
	if (x>y)//一二位排序
	{
		x=y;
		y=t;
	}
	t=x;
	if (x>z)//找出最小数，放在第一位
	{
		x=z;
		z=t;
	}
	t=y;
	if (y>z)//此时第一位必定是最小数，进行二三位排序
	{
		y=z;
		z=t;
	}
	printf("%d %d %d",x,y,z);
	return 0;
}

2. 定义一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，输出这个数的值
#include<stdio.h>
#include<math.h>//sqrt函数在math.h头文件中，需要预编译
#define max 210000000
int main()
{
	int x,n;
	for (x=0;x<max;x++)
	{
		if (sqrt(x+100)==(int) sqrt(x+100) && sqrt(x+268)==(int)sqrt(x+268))//sqrt求平方根
			break;
	}		
	printf("%d\n",x);
	return 0;
}

3. 输入一个5位数，判断它是否为回文数（回文数：正读倒读都一样，如12321）
#include<stdio.h>
int main()
{
	int x,i1,i2,i3,i4,i5,t;
	t=0;
	printf("请输入一个五位数：");
	scanf("%d",&x);
	i1=x/10000;
	i2=(x-10000*i1)/1000;
	i3=(x-10000*i1-1000*i2)/100;
	i4=(x-10000*i1-1000*i2-100*i3)/10;
	i5=x%10;
	if (i1==i5 && i2==i4)
		t=1;
	if (t)//if后的条件是逻辑运算的结果，分0和非0，非0即执行
		printf("%d是回文数\n",x);
	else
		printf("%d是不回文数\n",x);
	return 0;
}

2020.11.03
1. 双十一来临，小明想要购买一些食品。已知食品有两类优惠券，分别是100-10，200-20以此类推，上不封顶的满减券，和满400打9.5折，满500打8.5折，满600打7.5折，最多7.5折的折扣券。两类优惠券不可同时使用。且购物平台有每满400-50的津贴，津贴根据实际支付金额确定能否使用及使用额度。津贴可与优惠券同时使用。
请设计一个程序，输入商品总价，输出最省钱的优惠券和津贴搭配方式、总优惠金额及实际支付金额。
如：输入422
输出：优惠券种类：折扣券，津贴额度：50.00元，总优惠金额：71.10元，实际支付金额：350.90元
#include<stdio.h>
int main()
{
	float price,sale_1,sale_2,cut;//price总价，sale_1满减券，sale_2折扣券，pay支付金额
	int bonus_1,bonus_2;//bonus_1满减券津贴，bonus_2折扣券津贴
	printf("请输入商品总价：");
	scanf("%f",&price);
	sale_1=price-(price/100)*10;//每满100-10元
	bonus_1=(int)(sale_1/400)*50;//计算满减券情况下的津贴数
	sale_1=sale_1-bonus_1;//实付=满减后-津贴
	if (price>=400 && price<500)//判断具体折扣
		sale_2=price*0.95;
	if (price>=500 && price<600)
		sale_2=price*0.85;
	if (price>=600)
		sale_2=price*0.75;
	bonus_2=(int)(sale_2/400)*50;//使用折扣的津贴
	sale_2=sale_2-bonus_2;
	if (sale_1<sale_2)
	{
		cut=price-sale_1;
		printf("优惠券种类：满减券，津贴额度：%d元，总优惠金额：%.2f元，实际支付金额：%.2f元\n",bonus_1,cut,sale_1);
	}
	else if (sale_1>sale_2)
	{
		cut=price-sale_2;
		printf("优惠券种类：折扣券，津贴额度：%d元，总优惠金额：%.2f元，实际支付金额：%.2f元\n",bonus_2,cut,sale_2);
	}
	else if (sale_1=sale_2)
	{
		cut=price-sale_1;
		printf("优惠券种类：两种优惠券优惠金额相同，津贴额度：%d元，总优惠金额：%.2f元，实际支付金额：%.2f\n",bonus_1,cut,sale_1);
	}
	return 0;
}

2. 输入一个正整数n，计算1！+2！+3！+…+n！
#include<stdio.h>
int main()
{
	int n,i,t,sum;
	printf("请输入正整数n：");
	scanf("%d",&n);
	sum=0;t=1;
	for (i=1;i<=n;i++)
	{
		t=t*i;
		sum=sum+t;
	}
	printf("%d\n",sum);
	return 0;
}

3. 编写一个程序计算：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？ 
#include<stdio.h>
#include<math.h>//pow函数在math.h头文件中
int main()
{
	int month,rabbit,t;
	printf("请输入月份数：");
	scanf("%d",&month);
	t=month/3;
	rabbit=pow(2,t+1);//pow(x,y)表示x的y次方
	printf("截至第%d月，共有%d只兔子\n",month,rabbit);
	return 0;
}

2020.11.04
1.输入四个整数，再输入一个整数n，求出前四个整数中，哪两个之和等于n，如果有则输出具体的两个数，如果没有则输出false
基础解法：
#include<stdio.h>
int main()
{
	int x1,x2,x3,x4,n,s1,s2,s3,s4,s5,s6;
	printf("请输入四个整数：");
	scanf("%d%d%d%d",&x1,&x2,&x3,&x4);
	s1=x1+x2;s2=x1+x3;s3=x1+x4;
	s4=x2+x3;s5=x2+x4;s6=x3+x4;
	printf("请输入整数n：");
	scanf("%d",&n);
	if (s1==n)
		printf("%d+%d=%d\n",x1,x2,n);
	if(s2==n)
		printf("%d+%d=%d\n",x1,x3,n);
	if(s3==n)
		printf("%d+%d=%d\n",x1,x4,n);
	if(s4==n)
		printf("%d+%d=%d\n",x2,x3,n);
	if(s5==n)
		printf("%d+%d=%d\n",x2,x4,n);
	if(s6==n)
		printf("%d+%d=%d\n",x3,x4,n);
	if (s1!=n && s2!=n && s3!=n && s4!=n && s5!=n && s6!=n)
		printf("false\n");
	return 0;
}
数组解法：
#include<stdio.h>
int main()
{
	int a[3],n,i,t,m;
	m=0;
	for(i=0;i<=3;i++)
	{
		printf("请输入第%d个整数：",i+1);
		scanf("%d",&a[i]);
	}
	printf("请输入整数n：");
	scanf("%d",&n);
	for (i=0;i<3;i++)
	{
		for (t=i+1;t<=3;t++)
		{
			if (a[i]+a[t]==n)
			{
				printf("%d+%d=%d\n",a[i],a[t],n);
				m++;
			}
		}
	}
	if (m==0)
		printf("false\n");
	return 0;
}

2. 输入5个数，输出他们的最小值和平均值
#include<stdio.h>
int main()
{
	float f1,f2,f3,f4,f5,avg;
	printf("请输入五个数：");
	scanf("%f %f %f %f %f",&f1,&f2,&f3,&f4,&f5);
	avg=(f1+f2+f3+f4+f5)/5.0;
	if(f2<f1)
		f1=f2;
	if(f3<f1)
		f1=f3;
	if(f4<f1)
		f1=f4;
	if(f5<f1)
		f1=f5;
	printf("五个数中，最小值是%f，平均值是%f\n",f1,avg);
	return 0;
}

3.打印九九乘法表
#include<stdio.h>
int main()
{
	int i,j;
	for (i=1;i<=9;i++)
	{
		for (j=i;j<=9;j++)
		{
			printf("%d×%d=%d\t",i,j,i*j);
		}
		printf("\n");
	}
	return 0;
}

2020.11.05
1. 输入一个正整数，如果是完全平方数，输出true，如果不是，输出false。要求：不得使用sqrt求根函数
#include<stdio.h>
int main()
{
	int n,i,s,m;
	s=0;m=0;
	printf("请输入正整数n：");
	scanf("%d",&n);
	for (i=1;i<=n;i=i+2)//完全平方数必为1为首项，2为公差的等差数列之和
	{
		s=s+i;
		if (s==n)
			m=1;//m作为指示数
	}
	if (m)
		printf("True\n");
	else
		printf("False\n");
	return 0;
}

2. 2.使用公式︒C=(5/9)(°F-32）打印下列华氏温度与摄氏温度对照表：（提示可以使用到while或者for语句）
0    -17
20   -6
40   4
60   15
80   26
100  37
120  48
140  60
160  71
180  82
200  93
220  104
240  115
260  126
280  137
300  148
#include<stdio.h>
int main()
{
	int c,f;
	printf("℉\t℃\n");
	for (f=0;f<=300;f=f+20)
	{
		c=(f-32)*5/9;
		printf("%d\t%d\n",f,c);
	}
	return 0;
}

3. 编写程序，输入两个整数，求出它们的商和余数并输出
#include<stdio.h>
int main()
{
	int i1,i2,s,y;
	printf("请输入两个整数：");
	scanf("%d %d",&i1,&i2);
	s=i1/i2;
	y=i1-i2*s;
	printf("%d÷%d=%d···%d\n",i1,i2,s,y);
	return 0;
}

2020.11.06
1. 输入两个正整数，求出它们的最小公倍数和最大公约数
#include<stdio.h>
int main()
{
	int i1,i2,n,m,i;//n公约数，m公倍数
	printf("请输入两个正整数：");
	scanf("%d %d",&i1,&i2);
	for (i=1;i<=i1*i2;i++)
	{
		if (i1%i==0 && i2%i==0)
			n=i;
		if (i%i1==0 && i%i2==0)
		{	m=i;break;}//求最小公倍数，所以求得一个公倍数后跳出
	}
	printf("%d和%d的最大公约数是%d，最小公倍数是%d\n",i1,i2,n,m);
	return 0;
}
2. 输入整数n，输出n的所有质因子，例如13860，则输出2，2，3，3，5，7，11
#include<stdio.h>
int main()
{
	int n,i;
	printf("请输入整数n：");
	scanf("%d",&n);
	for(i=2;i<=n;i++)
	{
		while(n%i==0)
		{
			printf("%d ",i);
			n/=i;//使n约去一个最小因数
		}
	}
	return 0;
}

3. 从键盘输入10个数，统计非负数的个数，并计算它们的和
#include<stdio.h>
int main()
{
	int n,i,num,sum;
	num=0;
	sum=0;
	for(i=0;i<10;i++)
	{
		printf("请输入第%d个数",i+1);
		scanf("%d",&n);
		if(n>=0)
		{
			num++;
			sum=sum+n;
		}
	}
	printf("共有%d个非负数，它们的和为%d\n",num,sum);
	return 0;
}

2020.11.07
1.求出100~300的素数和
#include<stdio.h>
int main()
{
	int i,m,s,t;
	s=0;
	for(i=100;i<=300;i++)
	{
		t=0;
		for(m=1;m<=i;m++)
		{
			if(i%m==0)
			{	t++;}
		}
		if(t==2)
		{	s=s+i;}
	}
	printf("%d\n",s);
	return 0;
}

2. 输入一串字符，以0结尾，计算这串字符对应的ASCII码之和
#include<stdio.h>
int main()
{
	char c;
	int i=0;
	c=getchar();
	while(c!='0')
	{
		i=i+c;
		c=getchar();
	}
	printf("%d\n",i);
	return 0;
}

2020.11.08
1. 编程计算1~200中所有能被3整除但不能被5整除的整数之和
#include<stdio.h>
int main()
{
	int s,i;
	s=0;
	for(i=1;i<=200;i++)
	{
		if(i%3==0 && i%5!=0)
			s+=i;
	}
	printf("%d\n",s);
	return 0;
}

2020.11.09
1. 如果一个数既不是7的倍数，各位数字中也没有7，称它为7的不相关数。输入n，输出小于n的所有7的不相关数
#include<stdio.h>
int main()
{
	int n,i,t,k;
	printf("请输入正整数n：");
	scanf("%d",&n);
	t=1;
	for(i=1;i<=n;i++)
	{
		k=0;
		t=i;
		if(i%7!=0 && t%10!=7)
		{
			t=t/10;
			k++;
			if(t=0)
				break;
		}
		if(k>0)
			printf("%d ",i);
	}
	return 0;
}

2. 输入三角形的三边长，求三角形面积
#include<stdio.h>
#include<math.h>
int main()
{
	float a,b,c,s,h;
	printf("请输入三角形三条边长，并用\",\"隔开:\n");
	scanf("%f,%f,%f",&a,&b,&c);
	h=(a+b+c)/2;
	s=sqrt(h*(h-a)*(h-b)*(h-c));
	if(s<=0)
		printf("您输入的边长不能构成三角形。\n");
	else
		printf("三角形的面积为%.2f\n",s);
	return 0;
}
3. 输入三条边，判断其是否能成为三角形
#include<stdio.h>
int main()
{
	float a,b,c;
	printf("请输入三条边长：");
	scanf("%d %d %d",&a,&b,&c);
	if(a+b<=c || a+c<=b || b+c<=a)
		printf("false\n");
	else
		printf("true\n");
	return 0;
}

2020.11.10
1. 有1,2,3,4四个数字，能组成多少个互不相同且无重复的数字的三位数？都是多少?
#include<stdio.h>
int main()
{
	int i,j,k,t;
	t=0;
    for(i=1;i<5;i++)
	{ 
        for(j=1;j<5;j++)
		{
            for (k=1;k<5;k++)
			{   
                if (i!=k && i!=j && j!=k)
				{
					t++;
                    printf("%d%d%d ",i,j,k);
				}
            }
        }
    }
	printf("\n可以组成%d个三位数\n",t);
	return 0;
}

2. 输入一行字符，分别统计出其中英语字母，空格，数字和其他字符的个数
#include<stdio.h>
int main()
{
	int word,space,number,other;
	char ch;
	word=0;space=0;number=0;other=0;
	do
	{
		ch=getchar();
		if(ch>='0' && ch<='9')
		{	number++;}
		else if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))
		{	word++;}
		else if(ch==' ')
		{	space++;}
		else if(ch<'0' || ch>'z' || (ch>'9' && ch<'A') || (ch>'Z' && ch<'a'))
		{	other++;}
	}
	while(ch!='\n');
	printf("共有%d个英语字母，%d个空格，%d个数字，%d个其他字符\n",word,space,number,other-1);//其他字符数要减去最后的回车
	return 0;
}

3. 计算1/1-1/2+1/3-1/4+1/5 …… + 1/99 - 1/100 的值。
#include<stdio.h>
#include<math.h>
int main()
{
	float i,s,t;
	s=0;
	for(i=1;i<101;i++)
	{
		t=pow(-1,i+1)*1.0/i;
		s+=t;
	}
	printf("%f\n",s);
	return 0;
}

2020.11.11
1.n块砖n个人搬（n是整数），男搬4，女搬3，两个小孩抬一砖，男、女、小孩各若干，刚好一次搬完砖？
#include<stdio.h>
int main()
{
	int brick,man,woman,kid;
	printf("输入砖块数：");
	scanf("%d",&brick);
	for(man=0;man<=brick;man++)
	{
		for(woman=0;woman<=brick;woman++)
		{
			for(kid=0;kid<=brick;kid+=2)
			{
				if((4*man+3*woman+0.5*kid==brick) && (man+woman+kid==brick))
					printf("男%d人，女%d人，小孩%d人\n",man,woman,kid);
			}
		}
	}
	return 0;
}

2. 输入一个整数，判断它是否为素数
#include<stdio.h>
int main()
{
	int n,i,t;
	printf("请输入正整数n：");
	scanf("%d",&n);
	t=0;
	for(i=1;i<=n;i++)
	{
		if(n%i==0)
			t++;
	}
	if(t==2)
	{	printf("True\n");}
	else
	{	printf("Flase\n");}
	return 0;
}

3. 输入某年某月某日，判断这一天是这一年的第几天
#include<stdio.h>
int main()
{
	int year,month,day,sum;
	printf("请输入年、月、日：");
	scanf("%d%d%d",&year,&month,&day);
	if((year%4==0 && year%100!=0) || (year%400==0))
	{
		switch(month)
		{
		case 1:sum=day;break;
		case 2:sum=31+day;break;
		case 3:sum=60+day;break;
		case 4:sum=91+day;break;
		case 5:sum=121+day;break;
		case 6:sum=152+day;break;
		case 7:sum=182+day;break;
		case 8:sum=213+day;break;
		case 9:sum=244+day;break;
		case 10:sum=274+day;break;
		case 11:sum=305+day;break;
		case 12:sum=335+day;break;
		}
	}
	else
	{
		switch(month)
		{
		case 1:sum=day;break;
		case 2:sum=31+day;break;
		case 3:sum=59+day;break;
		case 4:sum=90+day;break;
		case 5:sum=120+day;break;
		case 6:sum=151+day;break;
		case 7:sum=181+day;break;
		case 8:sum=212+day;break;
		case 9:sum=243+day;break;
		case 10:sum=273+day;break;
		case 11:sum=304+day;break;
		case 12:sum=334+day;break;
		}
	}
	printf("%d年%d月%d日是%d年中的第%d天\n",year,month,day,year,sum);
	return 0;
}

2020.11.12
1. 输入一串字母，输出每个字母的后一位，如果输入的是z，则输出a。如：输入xyz，输出yza
（要求：使用数组）
#include<stdio.h>
int main()
{
	char c[128];
	int i,j;
	printf("请输入字符串：");
	for(i=0;i<128;i++)
	{
		c[i]=getchar();
		if(c[i]=='\n')
			break;
		c[i]=c[i]+1;
		if(c[i]!='z'+1 && c[i]!='Z'+1)
			putchar(c[i]);
		else if(c[i]=='z'+1)
			printf("a");
		else if(c[i]=='Z'+1)
			printf("A");
	}

	printf("\n");
	return 0;
}

2. 将大写字母a转化为小写字母（用if语句）
#include<stdio.h>
int main()
{
	char c;
	c='A';
	if(c=='A')
		c+=32;
	printf("%c\n",c);
	return 0;
}

2020.11.13
1. 输入10个数，将它们从小到大排列并输出
#include<stdio.h>
int main()
{
	int a[10],i,j,t;
	for(i=0;i<10;i++)
	{
		scanf("%d",&a[i]);
	}
	for(i=0;i<10;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(a[j]<a[i])
			{
				t=a[i];
				a[i]=a[j];
				a[j]=t;
			}
		}
	}
	for(i=0;i<10;i++)
	{
		printf("%d ",a[i]);
	}
	printf("\n");
	return 0;
}

2020.11.14
1. 输入一个正整数，将各位数字重新组合成一个最小的正整数。如输入：64210，输出：1246
#include<stdio.h>
#include<math.h>
int main()
{
	int a[10],n,i,j,k,t,sum;
	printf("请输入一个正整数：");
	scanf("%d",&n);
	i=0;
	while(n!=0)//取每一位的数
	{
		a[i]=n%10;
		n/=10;
		if(n==0)
			break;
		i++;
	}
	for(j=0;j<=i;j++)//进行降序排序
	{
		for(k=j+1;k<=i;k++)
		{
			if(a[k]>a[j])
			{
				t=a[j];
				a[j]=a[k];
				a[k]=t;
			}
		}
	}
	sum=0;
	for(j=0;j<=i;j++)
	{
		sum=sum+a[j]*pow(10,j);
	}
	printf("%d\n",sum);
	return 0;
}

2. 进阶：输入一个正整数，将各位数字重新组合成位数相同的一个最小的正整数。如输入：64210，输出：10246
#include<stdio.h>
#include<math.h>
int main()
{
	int a[10],n,i,j,k,t,sum,s;
	printf("请输入一个正整数：");
	scanf("%d",&n);
	i=0;
	while(n!=0)//取每一位的数
	{
		a[i]=n%10;
		n/=10;
		if(n==0)
			break;
		i++;
	}
	for(j=0;j<=i;j++)//进行降序排序
	{
		for(k=j+1;k<=i;k++)
		{
			if(a[k]>a[j])
			{
				t=a[j];
				a[j]=a[k];
				a[k]=t;
			}
		}
	}
	sum=0;s=0;
	for(j=0;j<=i;j++)//判断各位数字中0的个数
	{
		if(a[j]==0)
			s++;
	}
	if(a[i]==0)//将最小非零项移到数组最后一位
	{
		t=a[i];
		a[i]=a[i-s];
		a[i-s]=t;
	}
	for(j=0;j<=i;j++)
	{
		sum=sum+a[j]*pow(10,j);
	}
	printf("%d\n",sum);
	return 0;
}

2020.11.17
1. 编写程序，实现pow（x,n）的功能，即求x的n次幂，n为自然数
#include<stdio.h>
int main()
{
	double x,multi;
	int n,i;
	multi=1;
	scanf("%lf %d",&x,&n);
	for(i=1;i<=n;i++)
	{
		multi*=x;
	}
	printf("%lf\n",multi);
	return 0;
}

2020.11.18
1. 编写程序，实现sqrt（x）的功能，即求 ，x为非负数
#include<stdio.h>
int main()
{
	double multi;
	float f1,avg,x;
	int t;
	scanf("%f",&x);
	f1=0;avg=0;t=0;
	if(x>=1)
	{
		do
		{
			multi=f1*f1;
			if(multi<=x+0.000002 && multi>=x-0.000002)
			{
				avg+=f1;
				t++;
			}
			f1+=0.000001;
		}
		while(f1<=x);
	}
	f1=1;
	if(x<1)
	{
		do
		{
			multi=f1*f1;
			if(multi<=x+0.000002 && multi>=x-0.000002)
			{
				avg+=f1;
				t++;
			}
			f1-=0.000001;
		}
		while(f1>=x);
	}
	printf("%.3f\n",avg/t);
	return 0;
}

2020.11.20
1. 输入一个整数，输出它的二进制补码，整数输入范围：-128~127
#include<stdio.h>
int main()
{
	int i,num,a[8],t;
	scanf("%d",&num);
	t=0;
	if(num>=0)
	{
		for(i=0;num!=0;i++)//十进制转二进制
		{
			a[i]=num%2;
			num=num/2;
			t++;
		}
		for(i=7;i>=t;i--)//空余位用0补充，最高位符号位也是0
			a[i]=0;
	}
	else if(num<0)
	{
		num=num*-1;//先把负数变为正数
		for(i=0;num!=0;i++)//十进制转二进制
		{
			a[i]=num%2;
			num=num/2;
			t++;
		}
		for(i=6;i>=t;i--)//空余位用0补充
			a[i]=0;
		for(i=0;i<7;i++)//原码-反码，需要除符号位外，各位取反
		{
			if(a[i]==1)
			{
				a[i]=0;
				continue;
			}
			else if(a[i]==0)
			{
				a[i]=1;
				continue;
			}
		}
		for(i=0;i<7;i++)//反码-补码，需要+1
		{
			a[i]++;
			if(a[i]>=2)//判断是否需要进位
			{
				a[i]=0;
				a[i+1]++;
				if(a[i+1]==1)//判断进位停止
					break;
			}
			else if(a[i]==1)//判断是否在当前位停止
				break;			
		}
		a[7]=1;//负数的符号位是1
	}
	for(i=7;i>=0;i--)
		printf("%d",a[i]);
	return 0;
}

2020.11.22
1. 定义两个整型数组，并对两个数组进行初始化，然后输入目标值。寻找数组a中的哪个元素和数组b中的哪个元素之和等于目标值
#include<stdio.h>
int main()
{
	int t1,t2,i,target,j,t=0;//t1,t2分别作为数组a，b的长度指示
	int a[128],b[128];
	printf("输入数组a、b的长度：");
	scanf("%d %d",&t1,&t2);
	printf("请输入数组a元素");
	for(i=0;i<t1;i++)
	{
		scanf("%d",&a[i]);
	}
	printf("请输入数组b元素");
	for(i=0;i<t2;i++)
	{
		scanf("%d",&b[i]);
	}
	printf("输入目标值：");
	scanf("%d",&target);
	for(i=0;i<t1;i++)
	{
		for(j=0;j<t2;j++)
		{
			if(a[i]+b[j]==target)
			{
				printf("a[%d]+a[%d]=%d\n",i,j,target);
				t++;//t用来指示能否找到两数之和为目标值
			}
		}
	}
	if(t==0)
		printf("Not Found\n");
	return 0;
}

2020.11.24
1.编程解决鸡兔同笼问题，输入为头和脚的数量，输出鸡和兔的数量
#include<stdio.h>
int main()
{
	int cock,rabbit,foot,head;
	printf("Feet:");
	scanf("%d",&foot);
	printf("Heads:");
	scanf("%d",&head);
	for(cock=0;cock<=head;cock++)
	{
		for(rabbit=head-cock;rabbit<=head;rabbit++)
		{
			if(cock*2+rabbit*4==foot)
				printf("%dcocks+%drabbits\n",cock,rabbit);
		}
	}
	return 0;
}

2020.11.26
1.输入字符串，输出字符串长度。要求：使用函数
#include<stdio.h>
int length(char ch[]);
int main()
{
	char ch[100];
	int t;
	gets(ch);
	printf("%d\n",length(ch));
	return 0;
}
	

int length(char ch[])
{
	int i=0,t;
	for(i=0;i<100;i++)
	{
		if(ch[i]=='\0')
			break;
	}
	return i;
}

2020.11.28
1.编写一个功能是打印*的函数，通过调用函数，实现打印
*
**
***
#include<stdio.h>
void star(void);
int main()
{
	star();
	printf("\n");
	star();star();
	printf("\n");
	star();star();star();
	printf("\n");
	return 0;
}
void star(void)
{
	printf("*");
}

2020.11.29
1.计算斐波那契数列前n项的和，计算部分不写在主函数里，单独编写一个函数用来计算
#include<stdio.h>
int sumf(int n);
int main()
{
	int n,t;
	scanf("%d",&n);
	printf("%d\n",sumf(n));
	return 0;
}
int sumf(int n)
{
	int a[100],s=0,i;
	a[0]=1;a[1]=1;
	for(i=2;i<100;i++)
	{
		a[i]=a[i-1]+a[i-2];
	}
	for(i=0;i<n;i++)
	{
		s=s+a[i];
	}
	return s;
}

2020.11.30
1.输入仅包含大小写字母和空格的字符串，输出最后一个单词的长度，比如输入“Hello World”，输出5
#include<stdio.h>
int main()
{
	char s[100];
	int i,t1,t2,l,n;
	gets(s);
	t1=0;l=0;t2=0;
	for(i=0;i<100;i++)
	{
		if(s[i]==' ')
			t1++;
		if(s[i]=='\0')
			break;
	}
	n=i;
	for(i=0;i<n;i++)
	{
		if(t2==t1)
		{
			l=n-i;
			break;
		}
		if(s[i]==' ')
			t2++;
	}
	printf("%d\n",l);
	return 0;
}

2020.12.01
1.通过编写函数min(x,y)，输出两数中更小的数
#include<stdio.h>
int min(int x,int y);
int main()
{
	int x,y;
	scanf("%d %d",&x,&y);
	printf("%d\n",min(x,y));
	return 0;
}
int min(int x,int y)
{
	int min;
	min=x;
	if(y<min)
		min=y;
	return min;
}

2020.12.03
1.定义整型数组a[10]={0,1,2,3,4,5,6,7,8}，输入一个数插入数组，使得数组a仍然升序排列，并将数组整体输出
#include<stdio.h>
int main()
{
	int i,j,a[10]={0,1,2,3,4,5,6,7,8},n;
	scanf("%d",&n);
	for(i=0;i<10;i++)
	{
		if(a[i]>=n)
		{
			for(j=9;j>i;j--)
			{
				a[j]=a[j-1];
			}
			a[i]=n;
			break;
		}
	}
	if(a[8]<=n)
	{
		a[9]=n;
	}
	for(i=0;i<10;i++)
		printf("%d ",a[i]);
	return 0;
}

2020.12.05
1.输入一串英文语句（包括空格，不包括其他符号），输出在九键键盘上的按键顺序，如：输入hello world，输出43556096753
#include<stdio.h>
int main()
{
	char ch[127];
	int a[127];
	int i,key,t;
	gets(ch);
	for(i=0;i<127;i++)
		a[i]=ch[i]-97;
	i=0;
	while(ch[i]!='\0')
	{
		switch(a[i]/3)
		{
		case 0:printf("2");break;
		case 1:printf("3");break;
		case 2:printf("4");break;
		case 3:printf("5");break;
		case 4:printf("6");break;
		default:break;
		}
		switch(a[i])
		{
		case 15:case 16:case 17:case 18:printf("7");break;
		case 19:case 20:case 21:printf("8");break;
		case 22:case 23:case 24:case 25:printf("9");break;
		default:break;
		}
		if(ch[i]==' ')
			printf("0");
		i++;
	}
	return 0;
}

2020.12.07
1.输入ip地址，将它转换成16进制输出，如：输入192.168.0.1，输出C0 A8 00 01
#include<stdio.h>
int main()
{
	int ip1,ip2,ip3,ip4;
	scanf("%d.%d.%d.%d",&ip1,&ip2,&ip3,&ip4);
	printf("%02X %02X %02X %02X\n",ip1,ip2,ip3,ip4);
	return 0;
}

2020.12.09
1.输入行数，输出对应杨辉三角，且输出时左右需对称。
如：输入4，输出：
        1
      1   1
    1   2   1
  1   3   3   1
#include<stdio.h>
int main()
{
	int a[100][100],n;
	int i,j,k;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		a[i][0]=1;
	}
	for(i=1,j=1;i<n;i++,j++)
	{
		a[i][j]=1;
	}
	for(i=2;i<n;i++)
	{
		for(j=1;j<i;j++)
		{
			a[i][j]=a[i-1][j-1]+a[i-1][j];
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<n-i-1;j++)
		{	
			printf(" ");
		}
		for(j=0;j<=2*i;j++)
		{
			if(j<=i)
				printf("%d ",a[i][j]);		
		}
		printf("\n");
	}
	return 0;
}

2020.12.14
1.初始化一个降序数组a[10]={10，9，8，7，6，5，4，3，2，1}，定义一个函数，用来对整型数组升序排列，并升序排列a数组
#include<stdio.h>
#define N 10
void rank(int a[]);
int main()
{
	int i,a[N];
	for(i=0;i<N;i++)
		a[i]=N-i;
	rank(a);
	for(i=0;i<N;i++)
		printf("%d ",a[i]);
	return 0;
}
void rank(int a[])
{
	int i,j,t;
	for(i=0;i<N;i++)
	{
		for(j=i;j<N;j++)
		{
			if(a[j]<a[i])
			{
				t=a[j];
				a[j]=a[i];
				a[i]=t;
			}
		}
	}
}

2020.12.21
1.编写函数，实现求两数组中，某相同序号的两数的和。主函数中只负责初始化数组、输入序号、输出结果，计算过程在函数内
#include<stdio.h>
#define N 10
#define M 10
int sum(int a[],int b[],int n);
int main()
{
	int a[N],b[M],n,i;
	printf("输入数组a：");
	for(i=0;i<N;i++)
		scanf("%d",&a[i]);
	printf("输入数组b：");
	for(i=0;i<M;i++)
		scanf("%d",&b[i]);
	printf("输入序号n：");
	scanf("%d",&n);
	printf("%d\n",sum(a,b,n));
	return 0;
}
int sum(int a[],int b[],int n)
{
	int t;
	t=a[n]+b[n];
	return t;
}

2020.12.23
1.编写函数，统计输入的字符中大写、小写、数字、符号、空格的数量，主函数中只负责输入、调用函数、输出
#include<stdio.h>
int Word,word,space,number,other;
void input(char s[]);
int main()
{
	char s[80];
	gets(s);
	input(s);
	printf("共有%d个大写字母，%d个小写字母，%d个空格，%d个数字，%d个其他字符\n",Word,word,space,number,other);
	return 0;
}
void input(char ch[])
{
	int i;
	Word=0;word=0;space=0;number=0;other=0;
	for(i=0;ch[i]!='\0';i++)
	{
		if(ch[i]>='0' && ch[i]<='9')
			number++;
		else if(ch[i]>='a' && ch[i]<='z')
			word++;
		else if(ch[i]>='A' && ch[i]<='Z')
			Word++;
		else if(ch[i]==' ')
			space++;
		else if(ch[i]<'0' || ch[i]>'z' || (ch[i]>'9' && ch[i]<'A') || (ch[i]>'Z'&& ch[i]<'a'))
			other++;
	}
}

2020.12.25
1.编写函数，查找字符串中某个元素出现的次数
#include<stdio.h>
int f1(char s[],char n);
int main()
{
	char s[80],n;
	gets(s);
	scanf("%c",&n);	
	printf("%d\n",f1(s,n));
	return 0;
}
int f1(char s[],char n)
{
	int i,t=0;
	for(i=0;s[i]!='\0';i++)
	{
		if(s[i]==n)
			t++;
	}
	return t;
}

2020.12.28
1.编写函数，将一个大于2的偶数表示为两个素数之和
#include<stdio.h>
int g(int n);
int prime(int n);//判断素数
int main()
{
	int n;
	scanf("%d",&n);
	if(g(n))
		printf("Wrong Input!\n");
	return 0;
}
int prime(int n)
{
	int i,t;
	t=0;
	for(i=1;i<=n;i++)
	{
		if(n%i==0)
			t++;
	}
	if(t==2)
		return 1;
	else
		return 0;
}
int g(int n)
{
	int i;
	if(n%2)//判断输入是否是偶数
		return 1;
	else
	{
		for(i=2;i<=n/2;i++)//i<=n/2，防止重复、遗漏
		{
			if(prime(i)&&prime(n-i))
			{
					printf("%d+%d=%d\n",i,n-i,n);
			}
		}
		return 0;
	}
}

2021.01.04
1.编写函数，将一个大于5的奇数表示为三个素数之和
#include<stdio.h>
int g(int n);
int prime(int n);//判断素数
int main()
{
	int n;
	scanf("%d",&n);
	if(g(n))
		printf("Wrong Input!\n");
	return 0;
}
int prime(int n)
{
	int i,t;
	t=0;
	for(i=1;i<=n;i++)
	{
		if(n%i==0)
			t++;
	}
	if(t==2)
		return 1;//素数返回1，合数返回0
	else
		return 0;
}
int g(int n)
{
	int i,j;
	if(n<6 || n%2==0)
		return 1;
	else
	{
		for(i=2;i<n;i++)	
		{
			for(j=2;j<=n;j++)
			{
				if(prime(i)&&prime(j)&&prime(n-i-j))
				{
					printf("%d+%d+%d=%d\n",i,j,n-i-j,n);
					break;
				}
			}
		}
	}
	return 0;
}

